/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeImport } from './routes/home'
import { Route as ContactImport } from './routes/contact'
import { Route as CalculatorImport } from './routes/calculator'
import { Route as BlogDetailImport } from './routes/blog-detail'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as IndexImport } from './routes/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as UserUsersImport } from './routes/user/users'
import { Route as UserTasksImport } from './routes/user/tasks'
import { Route as UserSettingsImport } from './routes/user/settings'
import { Route as UserDashboardImport } from './routes/user/dashboard'
import { Route as UserChatsImport } from './routes/user/chats'
import { Route as UserAppsImport } from './routes/user/apps'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminUserProfileImport } from './routes/admin/user-profile'
import { Route as AdminUserHistoryImport } from './routes/admin/user-history'
import { Route as AdminUserEditImport } from './routes/admin/user-edit'
import { Route as AdminTotalUsersImport } from './routes/admin/total-users'
import { Route as AdminTasksImport } from './routes/admin/tasks'
import { Route as AdminSettingsImport } from './routes/admin/settings'
import { Route as AdminLoginImport } from './routes/admin/login'
import { Route as AdminInvestmentsImport } from './routes/admin/investments'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminChatsImport } from './routes/admin/chats'
import { Route as AdminAppsImport } from './routes/admin/apps'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2Import } from './routes/(auth)/sign-in-2'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedChatsIndexImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedSettingsNotificationsImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'

// Create/Update Routes

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorRoute = CalculatorImport.update({
  id: '/calculator',
  path: '/calculator',
  getParentRoute: () => rootRoute,
} as any)

const BlogDetailRoute = BlogDetailImport.update({
  id: '/blog-detail',
  path: '/blog-detail',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const UserUsersRoute = UserUsersImport.update({
  id: '/user/users',
  path: '/user/users',
  getParentRoute: () => rootRoute,
} as any)

const UserTasksRoute = UserTasksImport.update({
  id: '/user/tasks',
  path: '/user/tasks',
  getParentRoute: () => rootRoute,
} as any)

const UserSettingsRoute = UserSettingsImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => rootRoute,
} as any)

const UserDashboardRoute = UserDashboardImport.update({
  id: '/user/dashboard',
  path: '/user/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const UserChatsRoute = UserChatsImport.update({
  id: '/user/chats',
  path: '/user/chats',
  getParentRoute: () => rootRoute,
} as any)

const UserAppsRoute = UserAppsImport.update({
  id: '/user/apps',
  path: '/user/apps',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRoute,
} as any)

const AdminUserProfileRoute = AdminUserProfileImport.update({
  id: '/admin/user-profile',
  path: '/admin/user-profile',
  getParentRoute: () => rootRoute,
} as any)

const AdminUserHistoryRoute = AdminUserHistoryImport.update({
  id: '/admin/user-history',
  path: '/admin/user-history',
  getParentRoute: () => rootRoute,
} as any)

const AdminUserEditRoute = AdminUserEditImport.update({
  id: '/admin/user-edit',
  path: '/admin/user-edit',
  getParentRoute: () => rootRoute,
} as any)

const AdminTotalUsersRoute = AdminTotalUsersImport.update({
  id: '/admin/total-users',
  path: '/admin/total-users',
  getParentRoute: () => rootRoute,
} as any)

const AdminTasksRoute = AdminTasksImport.update({
  id: '/admin/tasks',
  path: '/admin/tasks',
  getParentRoute: () => rootRoute,
} as any)

const AdminSettingsRoute = AdminSettingsImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => rootRoute,
} as any)

const AdminLoginRoute = AdminLoginImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminInvestmentsRoute = AdminInvestmentsImport.update({
  id: '/admin/investments',
  path: '/admin/investments',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminChatsRoute = AdminChatsImport.update({
  id: '/admin/chats',
  path: '/admin/chats',
  getParentRoute: () => rootRoute,
} as any)

const AdminAppsRoute = AdminAppsImport.update({
  id: '/admin/apps',
  path: '/admin/apps',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn2Route = authSignIn2Import.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/blog-detail': {
      id: '/blog-detail'
      path: '/blog-detail'
      fullPath: '/blog-detail'
      preLoaderRoute: typeof BlogDetailImport
      parentRoute: typeof rootRoute
    }
    '/calculator': {
      id: '/calculator'
      path: '/calculator'
      fullPath: '/calculator'
      preLoaderRoute: typeof CalculatorImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/admin/apps': {
      id: '/admin/apps'
      path: '/admin/apps'
      fullPath: '/admin/apps'
      preLoaderRoute: typeof AdminAppsImport
      parentRoute: typeof rootRoute
    }
    '/admin/chats': {
      id: '/admin/chats'
      path: '/admin/chats'
      fullPath: '/admin/chats'
      preLoaderRoute: typeof AdminChatsImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/investments': {
      id: '/admin/investments'
      path: '/admin/investments'
      fullPath: '/admin/investments'
      preLoaderRoute: typeof AdminInvestmentsImport
      parentRoute: typeof rootRoute
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsImport
      parentRoute: typeof rootRoute
    }
    '/admin/tasks': {
      id: '/admin/tasks'
      path: '/admin/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AdminTasksImport
      parentRoute: typeof rootRoute
    }
    '/admin/total-users': {
      id: '/admin/total-users'
      path: '/admin/total-users'
      fullPath: '/admin/total-users'
      preLoaderRoute: typeof AdminTotalUsersImport
      parentRoute: typeof rootRoute
    }
    '/admin/user-edit': {
      id: '/admin/user-edit'
      path: '/admin/user-edit'
      fullPath: '/admin/user-edit'
      preLoaderRoute: typeof AdminUserEditImport
      parentRoute: typeof rootRoute
    }
    '/admin/user-history': {
      id: '/admin/user-history'
      path: '/admin/user-history'
      fullPath: '/admin/user-history'
      preLoaderRoute: typeof AdminUserHistoryImport
      parentRoute: typeof rootRoute
    }
    '/admin/user-profile': {
      id: '/admin/user-profile'
      path: '/admin/user-profile'
      fullPath: '/admin/user-profile'
      preLoaderRoute: typeof AdminUserProfileImport
      parentRoute: typeof rootRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof rootRoute
    }
    '/user/apps': {
      id: '/user/apps'
      path: '/user/apps'
      fullPath: '/user/apps'
      preLoaderRoute: typeof UserAppsImport
      parentRoute: typeof rootRoute
    }
    '/user/chats': {
      id: '/user/chats'
      path: '/user/chats'
      fullPath: '/user/chats'
      preLoaderRoute: typeof UserChatsImport
      parentRoute: typeof rootRoute
    }
    '/user/dashboard': {
      id: '/user/dashboard'
      path: '/user/dashboard'
      fullPath: '/user/dashboard'
      preLoaderRoute: typeof UserDashboardImport
      parentRoute: typeof rootRoute
    }
    '/user/settings': {
      id: '/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof UserSettingsImport
      parentRoute: typeof rootRoute
    }
    '/user/tasks': {
      id: '/user/tasks'
      path: '/user/tasks'
      fullPath: '/user/tasks'
      preLoaderRoute: typeof UserTasksImport
      parentRoute: typeof rootRoute
    }
    '/user/users': {
      id: '/user/users'
      path: '/user/users'
      fullPath: '/user/users'
      preLoaderRoute: typeof UserUsersImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/blog-detail': typeof BlogDetailRoute
  '/calculator': typeof CalculatorRoute
  '/contact': typeof ContactRoute
  '/home': typeof HomeRoute
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/admin/apps': typeof AdminAppsRoute
  '/admin/chats': typeof AdminChatsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/investments': typeof AdminInvestmentsRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/tasks': typeof AdminTasksRoute
  '/admin/total-users': typeof AdminTotalUsersRoute
  '/admin/user-edit': typeof AdminUserEditRoute
  '/admin/user-history': typeof AdminUserHistoryRoute
  '/admin/user-profile': typeof AdminUserProfileRoute
  '/admin/users': typeof AdminUsersRoute
  '/user/apps': typeof UserAppsRoute
  '/user/chats': typeof UserChatsRoute
  '/user/dashboard': typeof UserDashboardRoute
  '/user/settings': typeof UserSettingsRoute
  '/user/tasks': typeof UserTasksRoute
  '/user/users': typeof UserUsersRoute
  '/blog': typeof BlogIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/blog-detail': typeof BlogDetailRoute
  '/calculator': typeof CalculatorRoute
  '/contact': typeof ContactRoute
  '/home': typeof HomeRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/admin/apps': typeof AdminAppsRoute
  '/admin/chats': typeof AdminChatsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/investments': typeof AdminInvestmentsRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/tasks': typeof AdminTasksRoute
  '/admin/total-users': typeof AdminTotalUsersRoute
  '/admin/user-edit': typeof AdminUserEditRoute
  '/admin/user-history': typeof AdminUserHistoryRoute
  '/admin/user-profile': typeof AdminUserProfileRoute
  '/admin/users': typeof AdminUsersRoute
  '/user/apps': typeof UserAppsRoute
  '/user/chats': typeof UserChatsRoute
  '/user/dashboard': typeof UserDashboardRoute
  '/user/settings': typeof UserSettingsRoute
  '/user/tasks': typeof UserTasksRoute
  '/user/users': typeof UserUsersRoute
  '/blog': typeof BlogIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/blog-detail': typeof BlogDetailRoute
  '/calculator': typeof CalculatorRoute
  '/contact': typeof ContactRoute
  '/home': typeof HomeRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/admin/apps': typeof AdminAppsRoute
  '/admin/chats': typeof AdminChatsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/investments': typeof AdminInvestmentsRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/tasks': typeof AdminTasksRoute
  '/admin/total-users': typeof AdminTotalUsersRoute
  '/admin/user-edit': typeof AdminUserEditRoute
  '/admin/user-history': typeof AdminUserHistoryRoute
  '/admin/user-profile': typeof AdminUserProfileRoute
  '/admin/users': typeof AdminUsersRoute
  '/user/apps': typeof UserAppsRoute
  '/user/chats': typeof UserChatsRoute
  '/user/dashboard': typeof UserDashboardRoute
  '/user/settings': typeof UserSettingsRoute
  '/user/tasks': typeof UserTasksRoute
  '/user/users': typeof UserUsersRoute
  '/blog/': typeof BlogIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/blog-detail'
    | '/calculator'
    | '/contact'
    | '/home'
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/dashboard'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/dashboard'
    | '/admin/investments'
    | '/admin/login'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/total-users'
    | '/admin/user-edit'
    | '/admin/user-history'
    | '/admin/user-profile'
    | '/admin/users'
    | '/user/apps'
    | '/user/chats'
    | '/user/dashboard'
    | '/user/settings'
    | '/user/tasks'
    | '/user/users'
    | '/blog'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/blog-detail'
    | '/calculator'
    | '/contact'
    | '/home'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/dashboard'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/dashboard'
    | '/admin/investments'
    | '/admin/login'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/total-users'
    | '/admin/user-edit'
    | '/admin/user-history'
    | '/admin/user-profile'
    | '/admin/users'
    | '/user/apps'
    | '/user/chats'
    | '/user/dashboard'
    | '/user/settings'
    | '/user/tasks'
    | '/user/users'
    | '/blog'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/blog-detail'
    | '/calculator'
    | '/contact'
    | '/home'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/dashboard'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/dashboard'
    | '/admin/investments'
    | '/admin/login'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/total-users'
    | '/admin/user-edit'
    | '/admin/user-history'
    | '/admin/user-profile'
    | '/admin/users'
    | '/user/apps'
    | '/user/chats'
    | '/user/dashboard'
    | '/user/settings'
    | '/user/tasks'
    | '/user/users'
    | '/blog/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  BlogDetailRoute: typeof BlogDetailRoute
  CalculatorRoute: typeof CalculatorRoute
  ContactRoute: typeof ContactRoute
  HomeRoute: typeof HomeRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  AdminAppsRoute: typeof AdminAppsRoute
  AdminChatsRoute: typeof AdminChatsRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminInvestmentsRoute: typeof AdminInvestmentsRoute
  AdminLoginRoute: typeof AdminLoginRoute
  AdminSettingsRoute: typeof AdminSettingsRoute
  AdminTasksRoute: typeof AdminTasksRoute
  AdminTotalUsersRoute: typeof AdminTotalUsersRoute
  AdminUserEditRoute: typeof AdminUserEditRoute
  AdminUserHistoryRoute: typeof AdminUserHistoryRoute
  AdminUserProfileRoute: typeof AdminUserProfileRoute
  AdminUsersRoute: typeof AdminUsersRoute
  UserAppsRoute: typeof UserAppsRoute
  UserChatsRoute: typeof UserChatsRoute
  UserDashboardRoute: typeof UserDashboardRoute
  UserSettingsRoute: typeof UserSettingsRoute
  UserTasksRoute: typeof UserTasksRoute
  UserUsersRoute: typeof UserUsersRoute
  BlogIndexRoute: typeof BlogIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  BlogDetailRoute: BlogDetailRoute,
  CalculatorRoute: CalculatorRoute,
  ContactRoute: ContactRoute,
  HomeRoute: HomeRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  AdminAppsRoute: AdminAppsRoute,
  AdminChatsRoute: AdminChatsRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminInvestmentsRoute: AdminInvestmentsRoute,
  AdminLoginRoute: AdminLoginRoute,
  AdminSettingsRoute: AdminSettingsRoute,
  AdminTasksRoute: AdminTasksRoute,
  AdminTotalUsersRoute: AdminTotalUsersRoute,
  AdminUserEditRoute: AdminUserEditRoute,
  AdminUserHistoryRoute: AdminUserHistoryRoute,
  AdminUserProfileRoute: AdminUserProfileRoute,
  AdminUsersRoute: AdminUsersRoute,
  UserAppsRoute: UserAppsRoute,
  UserChatsRoute: UserChatsRoute,
  UserDashboardRoute: UserDashboardRoute,
  UserSettingsRoute: UserSettingsRoute,
  UserTasksRoute: UserTasksRoute,
  UserUsersRoute: UserUsersRoute,
  BlogIndexRoute: BlogIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/blog-detail",
        "/calculator",
        "/contact",
        "/home",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/admin/apps",
        "/admin/chats",
        "/admin/dashboard",
        "/admin/investments",
        "/admin/login",
        "/admin/settings",
        "/admin/tasks",
        "/admin/total-users",
        "/admin/user-edit",
        "/admin/user-history",
        "/admin/user-profile",
        "/admin/users",
        "/user/apps",
        "/user/chats",
        "/user/dashboard",
        "/user/settings",
        "/user/tasks",
        "/user/users",
        "/blog/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/dashboard",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/users/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/blog-detail": {
      "filePath": "blog-detail.tsx"
    },
    "/calculator": {
      "filePath": "calculator.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/admin/apps": {
      "filePath": "admin/apps.tsx"
    },
    "/admin/chats": {
      "filePath": "admin/chats.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/admin/investments": {
      "filePath": "admin/investments.tsx"
    },
    "/admin/login": {
      "filePath": "admin/login.tsx"
    },
    "/admin/settings": {
      "filePath": "admin/settings.tsx"
    },
    "/admin/tasks": {
      "filePath": "admin/tasks.tsx"
    },
    "/admin/total-users": {
      "filePath": "admin/total-users.tsx"
    },
    "/admin/user-edit": {
      "filePath": "admin/user-edit.tsx"
    },
    "/admin/user-history": {
      "filePath": "admin/user-history.tsx"
    },
    "/admin/user-profile": {
      "filePath": "admin/user-profile.tsx"
    },
    "/admin/users": {
      "filePath": "admin/users.tsx"
    },
    "/user/apps": {
      "filePath": "user/apps.tsx"
    },
    "/user/chats": {
      "filePath": "user/chats.tsx"
    },
    "/user/dashboard": {
      "filePath": "user/dashboard.tsx"
    },
    "/user/settings": {
      "filePath": "user/settings.tsx"
    },
    "/user/tasks": {
      "filePath": "user/tasks.tsx"
    },
    "/user/users": {
      "filePath": "user/users.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
